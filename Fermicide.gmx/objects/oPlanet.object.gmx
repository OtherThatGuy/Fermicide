<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>900</depth>
  <persistent>0</persistent>
  <parentName>oManager</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>size=random_range(16,512)
spots=choose(0,0,0,0,0,0,1,1,1,1,1,2,2,2,3)

for(i=0;i&lt;spots;i++){
    spotwidth[i]=random_range(16,64)*(size/512)
    spotheight[i]=spotwidth[i]/2+(random_range(-4,4)*(size/512))
    spotx[i]=random_range(-(size/2-spotwidth[i]),(size/2-spotwidth[i]))
    spoty[i]=random_range(-(size/2-spotheight[i]),(size/2-spotheight[i]))
}

hue=random(255)
sat=random_range(120,230)
val=random_range(120,230)

basecolor=make_colour_hsv(hue,sat,val)

color[1]=basecolor

for(i=1;i&lt;=size*2;i++){
color[i]=make_colour_hsv(clamp(colour_get_hue(color[i-1])+random_range(-3,3),hue-15,hue+15),clamp(colour_get_saturation(color[i-1])+random_range(-3,3),sat-15,sat+15),clamp(colour_get_value(color[i-1])+random_range(-3,3),val-15,val+15))
}

if distance_to_object(oPlanet)&lt;size*2 {
    if instance_nearest(x,y,oPlanet).size&lt;size instance_destroy()
    else with other instance_destroy()
}
oil=random(4)
jumpedto=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if random(30)&gt;29{
    point=random(360)
    way=random_range(-0.1,0.1)*size
    rad=size*random(1)
    effect_create_below(ef_smoke,x+(rad*cos((-point)*pi/180)),y+(rad*sin((-point)*pi/180)),size/180,basecolor)
    effect_create_below(ef_smoke,way+x+(rad*cos((-point)*pi/180)),y+(rad*sin((-point)*pi/180)),size/180,basecolor)
    effect_create_below(ef_smoke,(way*2)+x+(rad*cos((-point)*pi/180)),y+(rad*sin((-point)*pi/180)),size/180,basecolor)
}
//x+(radius*cos((-point)*pi/180))
//y+(radius*sin((-point)*pi/180))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>t=0
draw_set_alpha(size/2048)
draw_set_circle_precision(clamp(size/4,16,64))
for(i=0;i&lt;spots;i++) draw_ellipse_color(x+spotx[i]-spotwidth[i],y+spoty[i]-spotheight[i],x+spotx[i]+spotwidth[i],y+spoty[i]+spotheight[i],color[16],basecolor,false)
draw_circle_colour(x,y,size+size/8,c_black,basecolor,false)
draw_circle_colour(x,y,size+size/8+4,c_black,basecolor,false)

draw_set_alpha(size/512)
draw_circle_colour(x,y,size,c_black,basecolor,false)
for(i=-size;i&lt;=size;i++){
    //draw_line(x-(size/abs(i)),y+i,x+(size/abs(i)),y+i) //Stars?
    draw_set_alpha((1-abs(i/size))/2)
    var width;
    width=(abs(i/size))
    width=1-power(width,2.78)
    width*=size
    if abs(i)&lt;size*0.9{
        draw_line_colour(x-width,y+i,x+width,y+i,color[i+size],color[i+size])
    }
}
draw_set_alpha(0.1)
//draw_circle_color(x+size/7,y,size/1.15,c_black,c_white,false)
draw_circle_color(x+size/7,y,size/1.2,basecolor,basecolor,false)
draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
