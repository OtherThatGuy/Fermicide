<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>9950</depth>
  <persistent>0</persistent>
  <parentName>oManager</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>roughness=choose(0,0.3,0.7,1,2)
shiny=false
if random(36)&gt;35 shiny=true

ranges=(6+global.planetsize/20)*roughness
terrainpoints=3+random(9)

color=make_colour_hsv(colour_get_hue(global.planetcolor),colour_get_saturation(global.planetcolor)-40,colour_get_value(global.planetcolor)-45)
topcolor=make_colour_hsv(colour_get_hue(global.planetcolor)+random_range(-30,30),colour_get_saturation(global.planetcolor)-10,colour_get_value(global.planetcolor)+35)
fadein=60

for(u=0;u&lt;ranges;u++){
    rangex[u]=random_range(0,1280+global.planetsize*4)
    rangey[u]=random_range(0,1280+global.planetsize*4)
    rangesize[u]=random_range(1,8)
}

for(i=0;i&lt;terrainpoints;i++){
    if i mod 2 =1 terrainx[i]=-100
    else terrainx[i]=1380+global.planetsize*4
    terrainy[i]=random_range(-100,1380+global.planetsize*4)
    terrainalpha[i]=random(1)
}
forests=1+random(6)
treecolor=merge_color(color,c_green,random(1)-0.3)
for(i=0;i&lt;forests;i++){
    forestsize[i]=4+random(16)
    forestx[i]=random(1280+global.planetsize*4)
    foresty[i]=random(1280+global.planetsize*4)
}
rivers=choose(0,0,1)
rivercolor=merge_color(topcolor,c_blue,random(1))
riverystart=random_range(200,1180+global.planetsize*4)
riverwidth=random_range(32,128)
for(i=0;i&lt;6;i++){
    riverx[i]=i*((1280+global.planetsize*4)/5)
    rivery[i]=riverystart+random_range(-100,100)
}
if global.winningplanet=false{
    for(i=0;i&lt;global.planetoil;i++)instance_create(random_range(200,1180+global.planetsize*4),random_range(200,1180+global.planetsize*4),oOil)
    for(i=0;i&lt;random(global.jumps/3);i++)instance_create(random_range(200,1180+global.planetsize*4),random_range(200,1180+global.planetsize*4),oBase)
}
else{
    instance_create(0,0,oKillLasers)
    instance_create((1280+global.planetsize*4),0,oKillLasers)
    instance_create(0,(1280+global.planetsize*4),oKillLasers)
    instance_create((1280+global.planetsize*4),(1280+global.planetsize*4),oKillLasers)
    instance_create((1280+global.planetsize*4)/2,0,oKillLasers)
    instance_create(0,(1280+global.planetsize*4)/2,oKillLasers)
    instance_create((1280+global.planetsize*4),(1280+global.planetsize*4)/2,oKillLasers)
    instance_create((1280+global.planetsize*4)/2,(1280+global.planetsize*4),oKillLasers)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fadein=clamp(fadein-1,0,60)
fademult=1-fadein/60

if shiny = true draw_set_blend_mode_ext(bm_src_alpha_sat,bm_dest_colour)



draw_primitive_begin(pr_trianglestrip)
for(i=0;i&lt;terrainpoints;i++){
    draw_vertex_color(terrainx[i],terrainy[i],color,terrainalpha[i])
}
draw_primitive_end()

if shiny=true draw_set_blend_mode_ext(bm_src_colour,bm_one)

draw_primitive_begin(pr_trianglestrip)
for(i=0;i&lt;6*rivers;i++){
    draw_vertex_color(riverx[i],rivery[i],rivercolor,fademult/2)
    draw_vertex_color(riverx[i],rivery[i]+riverwidth,rivercolor,fademult/2)
}
draw_primitive_end()

for(i=0;i&lt;forests;i++){
    for(u=0;u&lt;forestsize[i];u++){
        draw_primitive_begin(pr_trianglelist)
        draw_vertex_color(forestx[i]+(u*24)+16,foresty[i]-32,treecolor,fademult)
        draw_vertex_color(forestx[i]+(u*24)+48,foresty[i]+32,color,0)
        draw_vertex_color(forestx[i]+(u*24)-16,foresty[i]+32,color,0)

        draw_vertex_color(forestx[i]+(u*24),foresty[i],treecolor,fademult)
        draw_vertex_color(forestx[i]+(u*24)+32,foresty[i]+64,color,0)
        draw_vertex_color(forestx[i]+(u*24)-32,foresty[i]+64,color,0)

        draw_vertex_color(forestx[i]+(u*24)+18,foresty[i]+32,treecolor,fademult)
        draw_vertex_color(forestx[i]+(u*24)+50,foresty[i]+96,color,0)
        draw_vertex_color(forestx[i]+(u*24)-14,foresty[i]+96,color,0)
        draw_primitive_end()
    }
}

for(u=0;u&lt;ranges;u++){
    for(i=0;i&lt;rangesize[u];i++){
        draw_primitive_begin(pr_trianglelist)
        draw_vertex_color(rangex[u]+i*64,rangey[u]-i*8,color,0)
        draw_vertex_color(rangex[u]-i*64,rangey[u]-i*8,color,0)
        draw_vertex_color(rangex[u],rangey[u]-i*64,topcolor,fademult)
        draw_primitive_end()
    }
}

draw_set_blend_mode(bm_normal)

draw_set_color(global.planetcolor)
draw_set_alpha(1-fademult)
draw_rectangle(-1,-1,room_width+1,room_height+1,false)

draw_set_alpha(1)
draw_set_color(c_white)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
